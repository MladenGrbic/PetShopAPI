// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Models;

namespace PetShop.Migrations
{
    [DbContext(typeof(DatabaseConnections))]
    [Migration("20211217094200_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetShop.Models.CategoriesModel", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PetShop.Models.CategoryProductModel", b =>
                {
                    b.Property<Guid>("MainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MainID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("PetShop.Models.CredentialsModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Username");

                    b.HasIndex("UserID");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("PetShop.Models.ProductModel", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductColour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<Guid?>("TransactionModelTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("TransactionModelTransactionID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PetShop.Models.TransactionModel", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionID");

                    b.HasIndex("UserID");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.CreditCardModel", b =>
                {
                    b.Property<string>("CreditCardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("CardOwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreditCardExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreditCardNumber");

                    b.HasIndex("CardOwnerID");

                    b.ToTable("CreditCardInfo");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.UserAdressModel", b =>
                {
                    b.Property<Guid>("UserAdressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("SecondAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAdressID");

                    b.ToTable("UserAdress");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.UserDataModel", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserAdressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserAdressidKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserNameAndSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserTelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("UserAdressID");

                    b.ToTable("MainUserData");
                });

            modelBuilder.Entity("PetShop.Models.CategoryProductModel", b =>
                {
                    b.HasOne("PetShop.Models.CategoriesModel", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Models.ProductModel", "Product")
                        .WithMany("Category")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PetShop.Models.CredentialsModel", b =>
                {
                    b.HasOne("PetShop.Models.UserModels.UserDataModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetShop.Models.ProductModel", b =>
                {
                    b.HasOne("PetShop.Models.TransactionModel", null)
                        .WithMany("BoughtProduct")
                        .HasForeignKey("TransactionModelTransactionID");
                });

            modelBuilder.Entity("PetShop.Models.TransactionModel", b =>
                {
                    b.HasOne("PetShop.Models.UserModels.UserDataModel", "UserDetailsAndCreditCardNumber")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("UserDetailsAndCreditCardNumber");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.CreditCardModel", b =>
                {
                    b.HasOne("PetShop.Models.UserModels.UserDataModel", "CardOwner")
                        .WithMany("User")
                        .HasForeignKey("CardOwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardOwner");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.UserDataModel", b =>
                {
                    b.HasOne("PetShop.Models.UserModels.UserAdressModel", "UserAdress")
                        .WithMany("User")
                        .HasForeignKey("UserAdressID");

                    b.Navigation("UserAdress");
                });

            modelBuilder.Entity("PetShop.Models.CategoriesModel", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("PetShop.Models.ProductModel", b =>
                {
                    b.Navigation("Category");
                });

            modelBuilder.Entity("PetShop.Models.TransactionModel", b =>
                {
                    b.Navigation("BoughtProduct");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.UserAdressModel", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("PetShop.Models.UserModels.UserDataModel", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
